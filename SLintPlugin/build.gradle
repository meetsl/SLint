/**
 * Since version 1.0.0 the Plugin Publish Plugin
 * automatically applies the Java Gradle Plugin Development Plugin (assists with developing Gradle plugins)
 * and the Maven Publish Plugin (generates plugin publication metadata).
 * If using older versions of the Plugin Publish Plugin, these helper plugins need to be applied explicitly.
 */
plugins {
//    id 'java-gradle-plugin'
    id 'groovy-gradle-plugin'
    id 'com.gradle.plugin-publish' version "1.2.0"
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id 'signing'
}

gradlePlugin {
    plugins {
        SLPlugin {
            id = 'com.meetsl.slint'
            displayName = "SLintPlugin"
            description = "A plugin that auto apply slint rules to project."
            implementationClass = 'com.zybang.slint.SLintPlugin'
        }
    }
}

ext {
    PUBLISH_GROUP_ID = 'io.github.meetsl'
    PUBLISH_ARTIFACT_ID = 'SLintPlugin'
    PUBLISH_VERSION = '1.0.0'
}

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    println "Found secret props file, loading props"
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
} else {
    println "No props file, loading env vars"
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION

                from components.java

                pom {
                    name = 'SLintPlugin'
                    description = 'A plugin that auto apply slint rules to project.'
                    url = 'https://github.com/meetsl/SLint'
                    licenses {
                        license {
                            name = 'Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'SeeLong'
                            name = 'ShiLong'
                            email = 'meetsl.dev@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:github.com:meetsl/SLint.git'
                        developerConnection = 'scm:git:ssh://github.com:meetsl/SLint.git'
                        url = 'https://github.com/meetsl/SLint/tree/master'
                    }
                }
            }
        }

        repositories {
            maven {
                name = "SLintPlugin"
                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                // You only need this if you want to publish snapshots, otherwise just set the URL
                // to the release repo directly
                url = PUBLISH_VERSION.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

                // The username and password we've fetched earlier
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }

        signing {
            sign publishing.publications.release
        }
    }
}

dependencies {
    implementation "com.android.tools.build:gradle:7.4.2"
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0'
}